name: Evaluate Test Cases
on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'reports/**'
      - '.github/workflows/benchmark.yaml'
      - 'package.json'

env:
  NODE_VERSION: 20.16.0
  PNPM_VERSION: 9.14.2
  BUN_VERSION: 1.1.10
  PYTHON_VERSION: 3.13

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: write
  discussions: read
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: read
  statuses: write

jobs:
  evaluate:
    name: Evaluate
    runs-on: ubuntu-22.04

    timeout-minutes: 20

    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Restore cached virtualenv
        uses: actions/cache/restore@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
          path: .venv

      - name: Restore cached virtualenv
        uses: actions/cache/restore@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
          path: .venv

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run codegen
        run: pnpm run:codegen

      - name: Run evaluate
        run: pnpm run:evaluate

      - name: Prepare venv
        shell: bash
        run: pnpm prepare:venv

      - name: Run generate report
        run: pnpm run:report

      - name: Upload results
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update __benchmark__ and __assets__ results

      - name: Saved cached virtualenv
        uses: actions/cache/save@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
          path: .venv
